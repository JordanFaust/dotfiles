#!/usr/bin/env python

import os
import sys
import getopt
import json
import datetime

def main(argv):
    color = False
    tmpfile = ''
    try:
      opts, args = getopt.getopt(argv,"hfc",["file=", "color="])
    except getopt.GetoptError:
      print('desktopevents-meetings -f {{file}} -c {{color}}')
      sys.exit(2)
    for opt, arg in opts:
      if opt == '-h':
          print('desktopevents-meetings -f {{file}} -c {{color}}')
          sys.exit()
      elif opt in ("-f", "--file"):
          tmpfile = arg
      elif opt in ("-p", "--color"):
          color = True

    if tmpfile == '':
        print("missing required field: file")
        sys.exit(2)

    events = {}
    with open(tmpfile, 'r') as reader:
        events = json.load(reader)

    for meeting in events['meetings']:
        now = datetime.datetime.today()
        starttime = datetime.datetime.strptime(meeting['start']['dateTime'], '%Y-%m-%dT%H:%M:%S.%f0')
        endtime = datetime.datetime.strptime(meeting['end']['dateTime'], '%Y-%m-%dT%H:%M:%S.%f0')
        subject = meeting['subject']
        location = meeting['location']['displayName']

        output = ''
        if color:
        # Dim the color output if the meeting has already occured
        # Uses conky color codes color1, color2 for styling past and future meetings
            if int(starttime.hour)*60 + int(starttime.minute) < int(now.hour)*60 + int(now.minute):
                colorcode = "${color1}"
                endcolor = "${color3}"
                print(f'{colorcode}{starttime.strftime("%H:%M")} {subject}{endcolor}')
            else:
                colorcode = '${color2}'
                endcolor = "${color3}"
                print(f'{colorcode}{starttime.strftime("%H:%M")} {subject}{endcolor}')
        else:
            print(f'{starttime.strftime("%H:%M")} {subject}')


if __name__ == "__main__":
    main(sys.argv[1:])
